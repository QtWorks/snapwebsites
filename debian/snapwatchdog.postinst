#!/bin/sh -e

#DEBHELPER#

# Source debconf library.
. /usr/share/debconf/confmodule

if [ "$1" = "configure" ]
then
    PACKAGENAME=snapwatchdog

    # Create files representing each service offered by this package
    #
    SERVICES_DIR=/usr/share/snapwebsites/services
    touch $SERVICES_DIR/${PACKAGENAME}.service

    # make the snapwatchdog lib folders
    #
    SNAPWATCHDOG_LIB_DIR=/var/lib/snapwebsites/${PACKAGENAME}
    mkdir -p ${SNAPWATCHDOG_LIB_DIR}
    chown snapwebsites:snapwebsites ${SNAPWATCHDOG_LIB_DIR}
    for subdir in data script-files
    do
        mkdir -p ${SNAPWATCHDOG_LIB_DIR}/${subdir}
        chown snapwebsites:snapwebsites ${SNAPWATCHDOG_LIB_DIR}/${subdir}
    done

    # Create the logfile because the snapwebsites user may have
    # difficulties with it otherwise during logrotate.
    #
    SNAPLOGDIR=/var/log/snapwebsites
    LOGFILE=${SNAPLOGDIR}/${PACKAGENAME}.log
    touch ${LOGFILE}
    chown snapwebsites:snapwebsites ${LOGFILE}
    chmod 640 ${LOGFILE}

    SNAPSECURELOGDIR=/var/log/snapwebsites/secure
    SECURELOGFILE=${SNAPSECURELOGDIR}/${PACKAGENAME}.log
    touch ${SECURELOGFILE}
    chown snapwebsites:snapwebsites ${SECURELOGFILE}
    chmod 640 ${SECURELOGFILE}

    SNAPSCRIPTSLOGDIR=/var/log/snapwebsites/snapwatchdog-output
    mkdir -p ${SNAPSCRIPTSLOGDIR}
    chown snapwebsites:snapwebsites ${SNAPSCRIPTSLOGDIR}
    chmod 770 ${SNAPSCRIPTSLOGDIR}

    SCRIPTSLOGFILE=${SNAPSCRIPTSLOGDIR}/snapwatchdog-scripts.log
    touch ${SCRIPTSLOGFILE}
    chown snapwebsites:snapwebsites ${SCRIPTSLOGFILE}
    chmod 640 ${SCRIPTSLOGFILE}

    # Signal snapdbproxy since we just added new tables
    #
    snapsignal snapdbproxy/NEWTABLE
fi

# vim: ts=4 sw=4 et nocindent
