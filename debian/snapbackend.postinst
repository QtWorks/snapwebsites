#!/bin/sh -e

## The following is what the DEBHELPER generates for the snapbackend service
##
## # Automatically added by dh_systemd_enable
## # This will only remove masks created by d-s-h on package removal.
## deb-systemd-helper unmask snapbackend.service >/dev/null || true
## 
## # was-enabled defaults to true, so new installations run enable.
## if deb-systemd-helper --quiet was-enabled snapbackend.service; then
##         # Enables the unit on first installation, creates new
##         # symlinks on upgrades if the unit file has changed.
##         deb-systemd-helper enable snapbackend.service >/dev/null || true
## else
##         # Update the statefile to add new symlinks (if any), which need to be
##         # cleaned up on purge. Also remove old symlinks.
##         deb-systemd-helper update-state snapbackend.service >/dev/null || true
## fi
## # End automatically added section


#DEBHELPER#

# Source debconf library.
. /usr/share/debconf/confmodule


if [ "$1" = "configure" ]
then
    # Create a directory where snapbackend saves various files
    #
    SNAPBACKEND_DATA_PATH=/var/lib/snapwebsites/snapbackend
    mkdir -p ${SNAPBACKEND_DATA_PATH}
    chown -R snapwebsites:snapwebsites ${SNAPBACKEND_DATA_PATH}

    # Create files representing each service offered by this package
    #
    SERVICES_DIR=/usr/share/snapwebsites/services
    touch ${SERVICES_DIR}/snapbackend.service
    touch ${SERVICES_DIR}/images.service
    touch ${SERVICES_DIR}/pagelist.service
    touch ${SERVICES_DIR}/sendmail.service
    touch ${SERVICES_DIR}/listjournal.service

    # Signal snapdbproxy since we just added new tables
    #
    snapsignal snapdbproxy/NEWTABLE

    systemctl daemon-reload
fi


# vim: ts=4 sw=4 et nocindent
