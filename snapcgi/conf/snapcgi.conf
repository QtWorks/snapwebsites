# Configuration file for the snap.cgi backend utility
#
# The file is a basic list of variable name = value
# Comments start with a # character, must be the first character after spaces
# Empty lines are ignored


# snapserver=<server IP address>:<server port>
#
# This is the address and port of the main snapserver executable.
# These are defined in the snapserver.conf file. You do not have
# to change this information here unless you changed it in
# snapserver.conf and thus need snap.cgi to connect to a different
# IP address and/or port.
#
# It is possible to have the localhost (snap.cgi and snapserver are
# running on the same computer) or use a private IP address (i.e.
# something such as 192.168.0.5 or 10.0.3.1).
#
# This should correspond to the listen=... variable defined in the
# snapserver.conf file.
#
# WARNING: The data travelling between snap.cgi and snapserver is
#          NOT encrypted. So only trusted connections can be used.
#          You may setup a VPN to be safe (see openvpn for example.)
#
# Note: 'localhost' is likely to fail because in most cases the OS tries
#       with IPv6 which is not fully supported by Snap yet.
#
# Default: 127.0.0.1:4004
snapserver=127.0.0.1:4004


# use_ssl=<true | false>
#
# Whether the connection to snapserver should use SSL or not. By default,
# it is set to true since the snapserver is installed with SSL by default.
# However, if the snapserver IP address is 127.0.0.1, then the connection
# will not use encryption anyway.
#
# Default: true
use_ssl=true


# temporary_cache_path=<path where cacheable files are saved temporarily>
#
# When snap.cgi serves a request, it checks the resulting headers and if
# the result of that request is cacheable, it will save that data to disk
# so the next time we receive the same request, the cached data can be
# sent to the user instead of re-querying the snapserver and database.
#
# To cancel the use of the cache, set the permanent_cache_path parameter
# to the empty string.
#
# Note 1: the cache is put under /var/lib and not /var/cache because the
# /var/cache files get deleted automatically without any regard to how
# the www cache should be handled.
#
# Note 2: Although it can be tempting to place the temporary file under
# a folder such as /run/snapwebsites (i.e. a memory based file system)
# it will not work because the snap.cgi process uses rename() which
# will not rename files cross-devices. We may later offer such a capability,
# but there are synchronization issues with such (i.e. a rename is
# instantaneous and opening the new file will work exactly as expected,
# a `mv`, however, may fail because only part of the file was copied
# when first accessed by another snap.cgi instance--so we would need to
# use locks to make it safe and overall you probably would not save any
# time.)
#
# Default: /var/lib/snapwebsites/www/temporary
temporary_cache_path=/var/lib/snapwebsites/www/temporary


# permanent_cache_path=<path where cacheable files are saved permanently>
#
# The snap.cgi tool can save the output of requests to files on disk on
# the computer running Apache2 (front ends). This path is the location where
# those files will be saved. We use a permanent cache and a temporary cache.
# The temporary cache must be defined on the same file system so rename(2)
# works as a move (fast) and not a "copy + delete" (would slow).
#
# To cancel the use of the cache, set this path to the empty string.
#
# The cache path is used by the various tools that manage the cache along
# the snap.cgi which creates and use data from it.
#
# Note: the cache is put under /var/lib and not /var/cache because the
# /var/cache files get deleted automatically without any regard to how
# the www cache should be handled.
#
# Default: /var/lib/snapwebsites/www/permanent
permanent_cache_path=/var/lib/snapwebsites/www/permanent


# log_config=<path to log properties>
#
# This variable defines the properties that log4cplus library will read
# to handle logging of the snap.cgi tool.
#
# Default: /etc/snapwebsites/logger/snapcgi.properties
log_config=/etc/snapwebsites/logger/snapcgi.properties


# vim: wrap
