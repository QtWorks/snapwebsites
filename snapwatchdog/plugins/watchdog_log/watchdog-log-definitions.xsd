<?xml version="1.0" encoding="utf-8"?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>
      XML Schema for Watchdog Log Definition files.
      Last Modified 2018-07-27
    </xsd:documentation>
  </xsd:annotation>

  <xsd:element name="watchdog-log-definitions">
    <xsd:annotation>
      <xsd:documentation>
        Container for a set of log elements.
        This is the root element of the XML file.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:choice minOccurs="0" maxOccurs="unbounded">
        <xsd:element name="log" type="tLog"/>
      </xsd:choice>
    </xsd:complexType>
  </xsd:element>

  <xsd:complexType name="tLog">
    <xsd:annotation>
      <xsd:documentation>
        Declaration of one log path. The pattern may define references
        to many log files.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:all>
      <xsd:element name="path" type="tPath" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="pattern" type="tPattern"/>
      <xsd:element name="max-size" type="tMaxSize"/>
      <xsd:element name="search" type="tSearch" minOccurs="0" maxOccurs="1"/>
    </xsd:all>
    <xsd:attribute name="name" type="name"/>
    <xsd:attribute name="mandatory" type="tMandatory" use="optional"/>
  </xsd:complexType>

  <xsd:simpleType name="tMandatory">
    <xsd:restriction base="name">
      <xsd:enumeration value="mandatory"/>
    </xsd:restriction>
  </xsd:simpleType>

  <xsd:simpleType name="tPath">
    <xsd:annotation>
      <xsd:documentation>
        Define the path where logs are to be found. The pattern is used to
        search for the actual logs.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>

  <xsd:simpleType name="tPattern">
    <xsd:annotation>
      <xsd:documentation>
        A list of patterns that are used to search for a log files within
        the path.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>

  <xsd:simpleType name="tMaxSize">
    <xsd:annotation>
      <xsd:documentation>
        The maximum size of these log files.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>

  <xsd:complexType name="tSearch">
    <xsd:annotation>
      <xsd:documentation>
        Define the name of the service that runs this process. This is
        the exact same name you use with systemctl. The watchdog system
        will check whether the service is currently enabled. If enabled
        then the process must be running. If not enabled, then it is
        expected the the process won't be running and as a result it
        doesn't even get checked.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:all>
      <xsd:element name="regex" type="tRegex" minOccurs="1" maxOccurs="unlimited"/>
    </xsd:all>
  </xsd:complexType>

  <xsd:simpleType name="tRegexContent">
    <xsd:annotation>
      <xsd:documentation>
        See tRegex. This simple type only defines the content.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>

  <xsd:simpleType name="tRegex">
    <xsd:annotation>
      <xsd:documentation>
        A regex used to check the log contents, one line at a time.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tRegexContent">
        <xsd:attribute name="report-as" type="tReportAs" use="optional" default="error"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:simpleType>

  <xsd:simpleType name="tReportAs">
    <xsd:restriction base="name">
      <xsd:enumeration value="debug"/>
      <xsd:enumeration value="info"/>
      <xsd:enumeration value="warning"/>
      <xsd:enumeration value="error"/>
      <xsd:enumeration value="fatal-error"/>
    </xsd:restriction>
  </xsd:simpleType>

  <xsd:simpleType name="name">
    <xsd:annotation>
      <xsd:documentation>
        A valid name composed of letters, digits and underscores.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[a-zA-Z_][a-zA-Z0-9_]*"/>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>
<!--
vim: ts=2 sw=2 et
-->
